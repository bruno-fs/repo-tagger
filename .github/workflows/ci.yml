name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-docker:
    name: Docker Tests
    runs-on: ubuntu-latest

    # Run a local registry to push to
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      IMAGE_TAG: localhost:5001/actions/repo-tagger:latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Docker BuildX
        id: setup-buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_TAG }}
      
  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    env:
      TEST_TAG: test-tag

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Ensure test-tag doesn't exist
        run: |
          git tag | grep -v ${{ env.TEST_TAG }}

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          tag: "${{ env.TEST_TAG }}"
      
      - name: Ensure test-tag was created
        run: |
          git tag | grep ${{ env.TEST_TAG }}
          git rev-list -n1 "${{ env.TEST_TAG }}" | grep "${{ steps.test-action.outputs.sha }}"

      - name: Print Output
        id: output
        run: |
          echo "${{ steps.test-action.outputs.tag }}"
          echo "${{ steps.test-action.outputs.sha }}"

      - name: Test action again - it should not override existing tag
        id: test-again
        uses: ./
        with:
          tag: "${{ env.TEST_TAG }}"
        
      - name: Ensure tag wasn't overriden
        run: |
          bash -c '[[ "${{ steps.test-again.outputs.tag }}" = "" ]] || false'
          bash -c '[[ "${{ steps.test-again.outputs.sha }}" = "" ]] || false'
          git rev-list -n1 "${{ env.TEST_TAG }}" | grep "${{ steps.test-action.outputs.sha }}"
        